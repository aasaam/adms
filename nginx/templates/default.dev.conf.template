worker_processes ${ASM_NGINX_WORKER_PROCESSES};

worker_rlimit_nofile ${ASM_NGINX_WORKER_RLIMIT_NOFILE};

error_log /dev/stdout ${ASM_NGINX_ERROR_LOG_LEVEL};

events {
  worker_connections ${ASM_NGINX_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

http {

  default_type application/octet-stream;
  include /etc/nginx/mime.types;

  aio threads=default;
  client_body_timeout 15;
  client_max_body_size 1;
  directio 2m;
  keepalive_requests 1024;
  keepalive_timeout 30;
  reset_timedout_connection on;
  sendfile_max_chunk 1m;
  sendfile on;
  send_timeout 5;
  server_tokens off;
  tcp_nodelay on;
  tcp_nopush on;
  map_hash_bucket_size 256;

  access_log off;

  charset utf-8;
  charset_types
    application/atom+xml
    application/dash+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.apple.mpegurl
    application/x-javascript
    application/xml
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

  gzip on;
  gzip_static on;
  gzip_min_length 32;
  gzip_comp_level 9;
  gzip_vary on;
  gzip_proxied any;
  gzip_types
    audio/mpegurl
    video/mpegurl
    application/atom+xml
    application/dash+xml
    application/dicom
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.apple.mpegurl
    application/vnd.ms-fontobject
    application/x-javascript
    application/xml
    font/opentype
    font/truetype
    font/ttf
    image/svg+xml
    image/x-icon
    text/css
    text/javascript
    text/plain
    text/x-component
    text/xml;

  open_file_cache max=8192 inactive=180s;
  open_file_cache_valid 120s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  proxy_cache_path /nginx-tmpfs/upload-auth-cache
    levels=1:2
    keys_zone=UPLOAD_AUTH_CACHE:1m
    use_temp_path=off
    max_size=${ASM_NGINX_TMPFS_UPLOAD_AUTH_CACHE_SIZE_MB}m
    inactive=30m;

  proxy_cache_path /nginx-tmpfs/serve-cache
    levels=1:2
    keys_zone=SERVE_CACHE:1m
    use_temp_path=off
    max_size=${ASM_NGINX_TMPFS_SERVE_CACHE_SIZE_MB}m
    inactive=30m;

  proxy_cache off;
  proxy_cache_methods GET HEAD;
  proxy_cache_valid 200 301 15m;
  # application response 412 for cache response when client error
  proxy_cache_valid 412 15m;
  proxy_request_buffering off;
  proxy_buffering off;
  proxy_http_version 1.1;

  # upload
  server {
    listen ${ASM_UPLOAD_PORT} default_server;

    set $cache_key "$http_host$request_uri";

    server_name _;

    # favicon
    location = /favicon.ico {
      expires max;
      etag off;
      alias /etc/nginx/favicon.ico;
    }

    # robots.txt
    location = /robots.txt {
      expires max;
      etag off;
      add_header 'Content-Type' 'text/plain';
      return 200 'User-agent: *\nDisallow: /';
    }

    # tusd
    location ~ ^${ASM_PUBLIC_TUSD_PATH} {
      auth_request /upload/auth;

      client_max_body_size ${ASM_PUBLIC_POST_UPLOADED_SIZE_BYTES};

      proxy_pass http://adms-tusd:${ASM_TUSD_PORT};

      # proxy defaults
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    # application
    location / {
      auth_request /upload/auth;

      client_max_body_size ${ASM_PUBLIC_POST_UPLOADED_SIZE_BYTES};

      proxy_pass http://adms-app:${ASM_APP_PORT};

      # proxy defaults
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    # application swagger path
    location ~ ^${ASM_PUBLIC_SWAGGER_PATH} {
      limit_except GET {
        deny all;
      }

      proxy_pass http://adms-app:${ASM_APP_PORT};

      proxy_cache SERVE_CACHE;
      proxy_cache_key $cache_key;
      add_header 'X-ADMS-Cache-Status' $upstream_cache_status;
      add_header 'X-ADMS-Cache-Key' $cache_key;

      # proxy defaults
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    # check access for upload
    location = /upload/auth {
      internal;

      set $cache_key "$http_host$http_x_adms_upload_token$cookie_adms_upload_token";

      proxy_cache UPLOAD_AUTH_CACHE;
      proxy_cache_methods GET HEAD POST PUT DELETE PATCH OPTIONS;
      proxy_cache_key $cache_key;

      proxy_pass http://adms-app:${ASM_APP_PORT};
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";

      # proxy defaults
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }
  }

  # serve server
  server {
    listen ${ASM_SERVE_PORT} default_server;

    server_name _;

    set $cache_key "$http_host$request_uri";

    # favicon
    location = /favicon.ico {
      expires max;
      etag off;
      alias /etc/nginx/favicon.ico;
    }

    # application
    location / {
      # only GET request will be responed
      limit_except GET {
        deny all;
      }

      # there will be no get parameters on serving data for security and better cache implementation
      if ($is_args) {
        return 400;
      }

      proxy_pass http://adms-app:${ASM_APP_PORT};

      proxy_cache SERVE_CACHE;
      proxy_cache_key $cache_key;
      add_header 'X-ADMS-Cache-Status' $upstream_cache_status;
      add_header 'X-ADMS-Cache-Key' $cache_key;

      # proxy defaults
      proxy_set_header X-Forwarded-For $http_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $http_host;
      proxy_set_header Connection "upgrade";
      proxy_set_header Upgrade $http_upgrade;
    }

    # nginx protected `X-Accel-Redirect` by application
    location /protected {
      internal;
      alias /storage;
    }
  }
}
